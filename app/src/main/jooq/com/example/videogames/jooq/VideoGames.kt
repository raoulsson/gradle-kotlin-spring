/*
 * This file is generated by jOOQ.
 */
package com.example.videogames.jooq


import com.example.videogames.jooq.tables.Databasechangeloglock
import com.example.videogames.jooq.tables.FlywaySchemaHistory
import com.example.videogames.jooq.tables.Game
import com.example.videogames.jooq.tables.GamePlatform
import com.example.videogames.jooq.tables.GamePublisher
import com.example.videogames.jooq.tables.Genre
import com.example.videogames.jooq.tables.Platform
import com.example.videogames.jooq.tables.Publisher
import com.example.videogames.jooq.tables.Region
import com.example.videogames.jooq.tables.RegionSales

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class VideoGames : SchemaImpl("video_games", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>video_games</code>
         */
        val VIDEO_GAMES: VideoGames = VideoGames()
    }

    /**
     * The table <code>video_games.DATABASECHANGELOGLOCK</code>.
     */
    val DATABASECHANGELOGLOCK: Databasechangeloglock get() = Databasechangeloglock.DATABASECHANGELOGLOCK

    /**
     * The table <code>video_games.flyway_schema_history</code>.
     */
    val FLYWAY_SCHEMA_HISTORY: FlywaySchemaHistory get() = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY

    /**
     * The table <code>video_games.game</code>.
     */
    val GAME: Game get() = Game.GAME

    /**
     * The table <code>video_games.game_platform</code>.
     */
    val GAME_PLATFORM: GamePlatform get() = GamePlatform.GAME_PLATFORM

    /**
     * The table <code>video_games.game_publisher</code>.
     */
    val GAME_PUBLISHER: GamePublisher get() = GamePublisher.GAME_PUBLISHER

    /**
     * The table <code>video_games.genre</code>.
     */
    val GENRE: Genre get() = Genre.GENRE

    /**
     * The table <code>video_games.platform</code>.
     */
    val PLATFORM: Platform get() = Platform.PLATFORM

    /**
     * The table <code>video_games.publisher</code>.
     */
    val PUBLISHER: Publisher get() = Publisher.PUBLISHER

    /**
     * The table <code>video_games.region</code>.
     */
    val REGION: Region get() = Region.REGION

    /**
     * The table <code>video_games.region_sales</code>.
     */
    val REGION_SALES: RegionSales get() = RegionSales.REGION_SALES

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Databasechangeloglock.DATABASECHANGELOGLOCK,
        FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
        Game.GAME,
        GamePlatform.GAME_PLATFORM,
        GamePublisher.GAME_PUBLISHER,
        Genre.GENRE,
        Platform.PLATFORM,
        Publisher.PUBLISHER,
        Region.REGION,
        RegionSales.REGION_SALES
    )
}
